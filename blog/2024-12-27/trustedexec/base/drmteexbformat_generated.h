/* This source was autogenerated by xbgen.
** DO NOT EDIT THIS SOURCE MANUALLY.
** If changes need to be applied update the XML and regenerate this source.
*/
/*
** This file defines the following generated formats
** DRM_TEE_XB_KB
*/
#ifndef __DRMTEEFORMATS_H__
#define __DRMTEEFORMATS_H__ 1

ENTER_PK_NAMESPACE;

PREFAST_PUSH_DISABLE_EXPLAINED( __WARNING_POOR_DATA_ALIGNMENT_25021, "Ignore poor alignment of XBinary data structures" );

#define DRM_PRKB_CURRENT_VERSION 1
#define DRM_TEE_KB_STACK_SIZE 256

typedef enum __tagDRM_TEE_XB_KB_TYPES 
{
    DRM_TEE_XB_KB_CRYPTO_DATA_ENTRY_TYPE  = 0x1,
    DRM_TEE_XB_KB_SIGNATURE_ENTRY_TYPE    = 0x2,
} DRM_TEE_XB_KB_TYPES;
/* Count Includes XB_OBJECT_GLOBAL_HEADER */
#define DRM_TEE_XB_KB_TYPE_COUNT       3
#define DRM_TEE_XB_KB_FORMAT_ID        XB_DEFINE_DWORD_FORMAT_ID( 'P', 'R', 'K', 'B' )

typedef struct __tagDRM_TEE_XB_KB_CRYPTO_DATA
{
    DRM_BOOL             fValid;
    DRM_WORD             wVersion;
    DRM_WORD             wKeyBlobType;
    DRM_XB_BYTEARRAY     xbbaPayload;
} DRM_TEE_XB_KB_CRYPTO_DATA;

typedef struct __tagDRM_TEE_XB_KB_SIGNATURE
{
    DRM_BOOL             fValid;
    DRM_WORD             wSignatureType;
    DRM_XB_BYTEARRAY     xbbaSignature;
} DRM_TEE_XB_KB_SIGNATURE;

typedef struct __tagDRM_TEE_XB_KB
{
    DRM_BOOL                      fValid;
    DRM_TEE_XB_KB_CRYPTO_DATA     CryptoData;
    DRM_TEE_XB_KB_SIGNATURE       Signature;
} DRM_TEE_XB_KB;

DRM_EXPORT_VAR extern DRM_GLOBAL_CONST DRM_XB_FORMAT_DESCRIPTION s_DRM_TEE_XB_KB_FormatDescription[1];

PREFAST_POP;

EXIT_PK_NAMESPACE;

#endif /* __DRMTEEFORMATS_H__ */
